// -*-java-*-

syntax = "proto3";
option java_package = "com.cloudant.search3.grpc";
import "google/protobuf/empty.proto";

service Search {
    // Index operations
    rpc Delete(Index) returns (google.protobuf.Empty);
    rpc Info(Index) returns (InfoResponse);

    // Read operations
    rpc Search(SearchRequest) returns (SearchResponse);
    rpc GroupSearch(GroupSearchRequest) returns (GroupSearchResponse);

    // Write operations
    rpc UpdateDocument(DocumentUpdateRequest) returns (google.protobuf.Empty);
    rpc DeleteDocument(DocumentDeleteRequest) returns (google.protobuf.Empty);

    // Non-index operations
    rpc Analyze(AnalyzeRequest) returns (AnalyzeResponse);
}

message Index {
    bytes prefix = 1;
    AnalyzerSpec default = 2;
	map<string, AnalyzerSpec> per_field = 3;
}

message AnalyzerSpec {
	string name = 1;
	repeated string stopwords = 2;
}

message UpdateSeq {
    string seq = 1;
}

message InfoResponse {
    uint32 doc_count = 1;
    uint32 doc_del_count = 2;
    string committed_seq = 3;
    string purge_seq = 4;
}

message Sort {
    repeated string fields = 1;
}

message Bookmark {
    repeated FieldValue order = 1;
}

message SearchRequest {
    Index index = 1;
    string query = 2;
    uint32 limit = 3;
    Bookmark bookmark = 4;
    bool stale = 5;
    Sort sort = 6;
    string partition = 7;
    repeated string counts = 8;
    string ranges = 9;
    string drilldown = 10;
    repeated string include_fields = 11;
}

message SearchResponse {
    UpdateSeq seq = 1;
    Bookmark bookmark = 2;
    uint64 matches = 3;
    repeated Hit hits = 4;
}

message GroupSearchRequest {
    Index index = 1;
    string query = 2;
    uint32 limit = 3;
    bool stale = 4;
    string group_by = 5;
    uint32 group_offset = 6;
    uint32 group_limit = 7;
    Sort group_sort = 8;
}

message GroupSearchResponse {
    UpdateSeq seq = 1;
    uint64 matches = 2;
    uint64 group_matches = 3;
    repeated Group groups = 4;
}

message Group {
    string by = 1;
    uint64 matches = 2;
    repeated Hit hits = 3;
}

message Hit {
    string id = 1;
    repeated FieldValue order = 2;
    repeated HitField fields = 3;
}

message DocumentField {
    string name = 1;
    FieldValue value = 2;
    bool analyzed = 3;
    bool stored = 4;
    bool facet = 5;
}

message HitField {
    string name = 1;
    FieldValue value = 2;
}

message FieldValue {
    oneof value {
        bool bool = 1;
        double double = 2;
        float float = 3;
        string string = 4;
        uint32 int = 5;
        uint64 long = 6;
    }
}

message DocumentUpdateRequest {
    Index index = 1;
    string id = 2;
    UpdateSeq seq = 3;
    UpdateSeq purge_seq = 4;
    repeated DocumentField fields = 5;
}

message DocumentDeleteRequest {
    Index index = 1;
    string id = 2;
    UpdateSeq seq = 3;
    UpdateSeq purge_seq = 4;
}

message AnalyzeRequest {
    AnalyzerSpec analyzer = 1;
    string text = 2;
}

message AnalyzeResponse {
    repeated string tokens = 1;
}
